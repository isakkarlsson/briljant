variables:
  MAVEN_OPTS: "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true -Dgpg.skip=true"

# Cache downloaded dependencies and plugins between builds.
cache:
  paths:
    - /root/.m2/repository/

# This will only validate and compile stuff and run e.g. maven-enforcer-plugin.
# Because some enforcer rules might check dependency convergence and class duplications
# we use `test-compile` here instead of `validate`, so the correct classpath is picked up.
.validate: &validate
  stage: build
  script:
    - 'mvn $MAVEN_CLI_OPTS test-compile'

# For merge requests do not `deploy` but only run `verify`.
# See https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html
.verify: &verify
  stage: test
  script:
    - 'mvn $MAVEN_CLI_OPTS verify site site:stage'
  except:
    - master

# Validate merge requests using JDK8
validate:jdk8:
  <<: *validate
  image: maven:3.3.9-jdk-8

# Verify merge requests using JDK8
verify:jdk8:
  <<: *verify
  image: maven:3.3.9-jdk-8


# For `develop` branch run `mvn deploy` automatically.
# Here you need to decide whether you want to use JDK7 or 8.
# To get this working you need to define a volume while configuring your gitlab-ci-multi-runner.
# Mount your `settings.xml` as `/root/.m2/settings.xml` which holds your secrets.
# See https://maven.apache.org/settings.html
deploy:jdk8:
  stage: deploy
  script:
    - 'mvn $MAVEN_CLI_OPTS deploy --settings ci-settings.xml -DskipTests=true'
  only:
    - develop
  image: maven:3.3.9-jdk-8

pages:develop:
  image: tsgkadot/sphinx-plantuml
  script:
    - 'sphinx-build -b html ./docs public/develop'
  stage: deploy
  artifacts:
    paths:
      - public
  only:
    - develop

pages:
  image: tsgkadot/sphinx-plantuml
  script:
    - 'sphinx-build -b html ./docs public'
  stage: deploy
  artifacts:
    paths:
      - public
  only:
    - master

pages:tags:
  image: tsgkadot/sphinx-plantuml
  script:
    - 'sphinx-build -b html ./docs public/$CI_BUILD_TAG'
  stage: deploy
  artifacts:
    paths:
      - public
  only:
    - tags
